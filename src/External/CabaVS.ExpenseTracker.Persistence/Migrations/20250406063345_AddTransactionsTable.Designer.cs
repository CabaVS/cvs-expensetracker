// <auto-generated />
using System;
using CabaVS.ExpenseTracker.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CabaVS.ExpenseTracker.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250406063345_AddTransactionsTable")]
    partial class AddTransactionsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.BalanceEf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Balances", (string)null);
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.CategoryEf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.CurrencyEf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Currencies", t =>
                        {
                            t.HasCheckConstraint("CK_CurrencySymbol_MinLength", "LEN(Code) >= 3");
                        });
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.TransactionEf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountInDestinationCurrency")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountInSourceCurrency")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DestinationBalanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DestinationCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SourceBalanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SourceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DestinationBalanceId");

                    b.HasIndex("DestinationCategoryId");

                    b.HasIndex("SourceBalanceId");

                    b.HasIndex("SourceCategoryId");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.UserEf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.WorkspaceEf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.WorkspaceMemberEf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("WorkspaceMembers");
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.BalanceEf", b =>
                {
                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.CurrencyEf", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.WorkspaceEf", "Workspace")
                        .WithMany()
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.CategoryEf", b =>
                {
                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.CurrencyEf", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.WorkspaceEf", "Workspace")
                        .WithMany()
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.TransactionEf", b =>
                {
                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.BalanceEf", "DestinationBalance")
                        .WithMany()
                        .HasForeignKey("DestinationBalanceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.CategoryEf", "DestinationCategory")
                        .WithMany()
                        .HasForeignKey("DestinationCategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.BalanceEf", "SourceBalance")
                        .WithMany()
                        .HasForeignKey("SourceBalanceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.CategoryEf", "SourceCategory")
                        .WithMany()
                        .HasForeignKey("SourceCategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.WorkspaceEf", "Workspace")
                        .WithMany()
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinationBalance");

                    b.Navigation("DestinationCategory");

                    b.Navigation("SourceBalance");

                    b.Navigation("SourceCategory");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.WorkspaceMemberEf", b =>
                {
                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.UserEf", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CabaVS.ExpenseTracker.Persistence.EfEntities.WorkspaceEf", "Workspace")
                        .WithMany("Members")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("CabaVS.ExpenseTracker.Persistence.EfEntities.WorkspaceEf", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
